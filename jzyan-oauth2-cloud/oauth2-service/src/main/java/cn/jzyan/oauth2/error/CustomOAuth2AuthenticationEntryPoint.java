package cn.jzyan.oauth2.error;

import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.authentication.InternalAuthenticationServiceException;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.oauth2.provider.error.AbstractOAuth2SecurityExceptionHandler;
import org.springframework.security.web.AuthenticationEntryPoint;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * @author : jzyan
 * @date : 2020/12/03
 */
public class CustomOAuth2AuthenticationEntryPoint extends AbstractOAuth2SecurityExceptionHandler implements
        AuthenticationEntryPoint {

    @Override
    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)
            throws IOException, ServletException {
        doHandle(request, response, authException);
    }

    /**
     * Allow subclasses to manipulate the response before it is rendered.
     * <p>
     * Note : Only the {@link ResponseEntity} should be enhanced. If the
     * response body is to be customized, it should be done at the
     * {@link WebResponseExceptionTranslator} level.
     *
     * @param result        the response that was generated by the
     *                      {@link #setExceptionTranslator(WebResponseExceptionTranslator) exception translator}.
     * @param authException the authentication exception that is being handled
     */
    @Override
    protected ResponseEntity<?> enhanceResponse(ResponseEntity<?> result, Exception authException) {
        Map<String, Object> map = new HashMap<>(4);
        if (authException instanceof InternalAuthenticationServiceException) {
            map.put("message", "client_id：无效！");
        } else if (authException instanceof BadCredentialsException) {
            map.put("message", "client_secret：错误！");
        } else {
            map.put("message", authException.getLocalizedMessage());
        }
        map.put("code", result.getStatusCode().value());
        map.put("data", null);
        map.put("dateTime", new Date());
        return new ResponseEntity<>(map, result.getStatusCode());
    }

}
